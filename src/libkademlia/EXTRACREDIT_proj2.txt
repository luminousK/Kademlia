EXTRACREDIT_proj2

Test case 1: TestIterativeFindNode1
1. In this test, the functionality of interativeFindNode is tested.
2. Given origin node as node 1, whose k-buckets contain node2, node3 and node4's contacts.
3. Node2's k-buckets contain other 20 nodes' contacts, node3's contain other 20 nodes' contacts.
   Also node4's contain other 20 nodes'.
4. Goal here is to find node2. So, considering the concurrancy of iterative finding node, the returened
   list should contain contacts of node2, node3, node 4 and other nodes from k-buckets of node2, 3, 4.

Test case 2: TestIterativeFindNode2
1. In this test, the functionality of interativeFindNode is tested. The checking process of non-active
   nodes is tested.
2. Same nodes are set as in test case 1, except for node4 and 20 nodes in its k-buckets. Here, node4 is
   set to dead and have no contacts in its k-buckets.
3. As the result of finding node2, the contact of node4 should not be in returened shortlist.

Test case 3: TestIterativeFindNode3
1. In this test, the functionality of interativeFindNode is tested. The checking process of non-active
   nodes is tested.
2. Same setting, but node2, node3, node4 are all dead here.
3. As a result, the returned list should be empty. Since there is no active node in node1's k-buckets.

Test case 4: func TestIterativeStroeValue
1. In this test, the functionality of iterativeStoreValue is tested.
2. Same setting as test case 1.
3. A test key-value pair is stored, and as a result, all nodes in the returned list should have stored
   the given key-value pair.

Test case 5: TestIterativeFindValue1
1. In this test, the functionality of iterativeFindValue is tested.
2. Same setting as test case 1. And a test key-value pair is stored in the datamap of the node farest
   from node 1.
3. As a result of finding with right key, the value should be returned.
4. As a result of finding with wrong key, the ID closest node should be returned.

Test case 6: TestIterativeFindValue2
1. In this test, the functionality of iterativeFindValue is tested. And the tolerance of few active nodes
   in the network is tested.
2. Three nodes: node1, node2, node3. Node1 and node2 have each other's contact, node2 and node3 have each
   other's.
3. A key-value pair is stored in node3.
4. As a result of finding such value, the value should be returned.